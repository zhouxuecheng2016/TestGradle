group 'com.vip.trade'
version '1.0-SNAPSHOT'

apply plugin: 'java'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task hello_start {
    doLast {
        println 'Hello World'
    }
}

task hello_shorthand << {
    println 'Hello World Short Hand'
}

//Build scripts are code
task upper << {
    String someString = 'mY_nAmE'
    println "Original: " + someString
    println "Upper case: " + someString.toUpperCase()
}

task count << {
    4.times { println "$it " }
}

//Task dependencies
//Declaration of dependencies between tasks
task hello_dependencies << {
    println 'Hello world!'
}

task intro(dependsOn: hello_dependencies) << {
    println "I'm Gradle"
}

//Lazy dependsOn - the other task does not exist (yet)
task taskX(dependsOn: 'taskY') << {
    println 'taskX'
}

task taskY << {
    println 'taskY'
}

//6.6. Dynamic tasks
4.times {
    counter -> task "task$counter" << {
        println "I'm task number $counter"
    }
}

//6.7. Manipulating existing tasks
//通过API进行任务之间的通信--增加依赖
task0.dependsOn task2, task3

//通过API进行任务之间的通信--增加任务行为
task hello_add_task_behavior << {
    println 'Hello Earth'
}

hello_add_task_behavior.doFirst {
    println 'Hello Venus'
}

hello_add_task_behavior.doLast {
    println 'Hello Mars'
}

hello_add_task_behavior << {
    println 'Hello Jupiter'
}

//其中 << 操作符 是 doLast 的简写方式
//Shortcut notations
task hello_shortcut_notations << {
    println 'Hello world!'
}

hello_shortcut_notations.doLast {
    println "Greetings from the $hello_shortcut_notations.name task."
}

//Extra task properties
//自定义属性不仅仅局限于任务上,还可以做更多事情.你可以阅读章节 13.4.2, “自定义属性”来了解更多内容.
task myTask {
    ext.myProperty = "myValue"
}

task printTaskProperties << {
    println myTask.myProperty
}

//Using Ant Tasks
task loadfile << {
    def files = file('D:\\gradle\\workplace\\TestTrade\\BuildScriptBasic\\src\\main\\java\\com\\vip\\trade').listFiles().sort()
    files.each {
        File file ->
            if (file.isFile()) {
                ant.loadfile(srcFile: file, property: file.name)
                println " *** $file.name ***"
                println "${ant.properties[file.name]}"
            }
    }
}

//Using methods
task checksum << {
    fileList('D:\\gradle\\workplace\\TestTrade\\BuildScriptBasic\\src\\main\\java\\com\\vip\\trade')
            .each {File file -> ant.checksum(file: file, property: "cs_$file.name")
                                println "$file.name Checksum: ${ant.properties["cs_$file.name"]}"
    }
}

File[] fileList(String dir) {
    file(dir).listFiles({file -> file.isFile() } as FileFilter).sort()
}

task loadfile_method << {
    fileList('D:\\gradle\\workplace\\TestTrade\\BuildScriptBasic\\src\\main\\java\\com\\vip\\trade')
            .each {File file ->
        ant.loadfile(srcFile: file, property: file.name)
        println "I'm fond of $file.name"
    }
}

//Default tasks

defaultTasks 'clean1', 'run1'

task clean1 << {
    println 'Default Cleaning!'
}

task run1 << {
    println 'Default Running!'
}

task other1 << {
    println "I'm not a default task!"
}

//Configure by DAG
task distribution << {
    println "We build the zip with version=$version"
}

task release(dependsOn: 'distribution') << {
    println 'We release now'
}

gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(release)) {
        version = '1.0'
    } else {
        version = '1.0-SNAPSHOT'
    }
}

